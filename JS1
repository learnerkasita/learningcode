<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>To-Do List App</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #f6f7fb;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
    }

    .todo-container {
      background: white;
      padding: 20px 30px;
      border-radius: 12px;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
      width: 350px;
    }

    h2 {
      text-align: center;
      margin-bottom: 20px;
      color: #333;
    }

    .input-section {
      display: flex;
      margin-bottom: 20px;
    }

    #taskInput {
      flex: 1;
      padding: 10px;
      border: 1px solid #ccc;
      border-radius: 6px;
      outline: none;
    }

    #addBtn {
      margin-left: 10px;
      padding: 10px 15px;
      background-color: #007bff;
      color: white;
      border: none;
      border-radius: 6px;
      cursor: pointer;
    }

    #addBtn:hover {
      background-color: #0056b3;
    }

    ul {
      list-style-type: none;
      padding: 0;
    }

    li {
      background: #f2f2f2;
      padding: 10px;
      margin-bottom: 10px;
      border-radius: 6px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      cursor: pointer;
    }

    li.completed {
      text-decoration: line-through;
      color: #888;
    }

    .delete-btn {
      background: red;
      color: white;
      border: none;
      border-radius: 4px;
      padding: 5px 8px;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <div class="todo-container">
    <h2>üìù To-Do List</h2>
    <div class="input-section">
      <input type="text" id="taskInput" placeholder="Enter a new task..." />
      <button id="addBtn">Add</button>
    </div>
    <ul id="taskList"></ul>
  </div>

  <script>
    const taskInput = document.getElementById("taskInput");
    const addBtn = document.getElementById("addBtn");
    const taskList = document.getElementById("taskList");

    // Load tasks from localStorage
    let tasks = JSON.parse(localStorage.getItem("tasks")) || [];

    function saveTasks() {
      localStorage.setItem("tasks", JSON.stringify(tasks));
    }

    function renderTasks() {
      taskList.innerHTML = "";
      tasks.forEach((task, index) => {
        const li = document.createElement("li");
        li.textContent = task.text;
        if (task.completed) li.classList.add("completed");

        // Toggle completion
        li.addEventListener("click", () => {
          tasks[index].completed = !tasks[index].completed;
          saveTasks();
          renderTasks();
        });

        // Delete button
        const deleteBtn = document.createElement("button");
        deleteBtn.textContent = "X";
        deleteBtn.classList.add("delete-btn");
        deleteBtn.addEventListener("click", (e) => {
          e.stopPropagation(); // prevent toggle
          tasks.splice(index, 1);
          saveTasks();
          renderTasks();
        });

        li.appendChild(deleteBtn);
        taskList.appendChild(li);
      });
    }

    addBtn.addEventListener("click", () => {
      const text = taskInput.value.trim();
      if (text) {
        tasks.push({ text, completed: false });
        saveTasks();
        renderTasks();
        taskInput.value = "";
      }
    });

    // Allow Enter key to add task
    taskInput.addEventListener("keypress", (e) => {
      if (e.key === "Enter") addBtn.click();
    });

    // Initial render
    renderTasks();
  </script>
</body>
</html>
